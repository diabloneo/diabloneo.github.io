<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coffee, Coke and Code</title>
    <description>Archive diabloneo's articles.
</description>
    <link>http://diabloneo.github.io//</link>
    <atom:link href="http://diabloneo.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 08 Dec 2018 23:00:19 +0800</pubDate>
    <lastBuildDate>Sat, 08 Dec 2018 23:00:19 +0800</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Postgres的使用 - 4</title>
        <description>&lt;h2 id=&quot;sequence-的相关操作&quot;&gt;sequence 的相关操作&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;sequence&lt;/strong&gt; 是 Postgres 的一种对象，用来实现自增序列的生成，一般会用来生成表的主键的值。例如下面这个 &lt;em&gt;task&lt;/em&gt; 表的主键就使用一个 sequence &lt;strong&gt;task_id_seq&lt;/strong&gt; 来生成：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;testdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Table&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;public.task&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Column&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;           &lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                     &lt;span class=&quot;n&quot;&gt;Modifiers&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;------------+--------------------------+---------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;integer&lt;/span&gt;                  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nextval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'task_id_seq'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Postgres 提供了一些操作 sequence 的函数：&lt;em&gt;&lt;a href=&quot;https://www.postgresql.org/docs/9.6/functions-sequence.html&quot;&gt;https://www.postgresql.org/docs/9.6/functions-sequence.html&lt;/a&gt;&lt;/em&gt;。&lt;/p&gt;

&lt;h3 id=&quot;查询-sequence-会生成的下一个值&quot;&gt;查询 sequence 会生成的下一个值&lt;/h3&gt;

&lt;p&gt;如果当前的 session 调用过了 &lt;code class=&quot;highlighter-rouge&quot;&gt;nextval()&lt;/code&gt; 函数，就可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;currval(seqname)&lt;/code&gt; 函数来获取一个 sequence 对象最后一次被 &lt;code class=&quot;highlighter-rouge&quot;&gt;nextval()&lt;/code&gt; 函数返回的值，将其加一就可以得到下一个值。注意，如果在当前 session 中没有对这个 sequence 调用过 &lt;code class=&quot;highlighter-rouge&quot;&gt;nextval()&lt;/code&gt; 函数，那么调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;currval(seqname)&lt;/code&gt; 将返回错误。&lt;/p&gt;

&lt;p&gt;不过，即使当前的 session 没有调用对应 &lt;code class=&quot;highlighter-rouge&quot;&gt;nextval(seqname)&lt;/code&gt;，也可以通过直接查看 relation 的方式起来确定一个 sequence 会生成的下一个值。例如，上面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;task_id_seq&lt;/code&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;testdb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task_id_seq&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;Sequence&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;public.task_id_seq&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;Column&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;---------------+---------+---------------------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;sequence_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task_id_seq&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;last_value&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6296&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;start_value&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;increment_by&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;max_value&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9223372036854775807&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;min_value&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;cache_value&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;log_cnt&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bigint&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;is_cycled&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;is_called&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Owned&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;关注其中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;last_value&lt;/code&gt; 字段和 &lt;code class=&quot;highlighter-rouge&quot;&gt;is_called&lt;/code&gt; 字段。&lt;code class=&quot;highlighter-rouge&quot;&gt;last_value&lt;/code&gt; 表示上次被调用的值是多少，这个值会从 &lt;code class=&quot;highlighter-rouge&quot;&gt;start_value&lt;/code&gt; 指定的值开始，一般是 1。 如果 &lt;code class=&quot;highlighter-rouge&quot;&gt;is_called&lt;/code&gt; 的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;，表示 &lt;code class=&quot;highlighter-rouge&quot;&gt;last_value&lt;/code&gt; 这个值还没有被返回过，会在下次返回。一般来说，当我们刚创建了一个表时，还未向其中插入数据，即&lt;code class=&quot;highlighter-rouge&quot;&gt;last_value&lt;/code&gt; 的值等于 &lt;code class=&quot;highlighter-rouge&quot;&gt;start_value&lt;/code&gt; 的值时，&lt;code class=&quot;highlighter-rouge&quot;&gt;is_called&lt;/code&gt; 的值会设置为 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;上面这个输出表示 &lt;code class=&quot;highlighter-rouge&quot;&gt;task_id_seq&lt;/code&gt; 最后一次返回的是 &lt;strong&gt;6296&lt;/strong&gt;，下一次返回 6297。&lt;/p&gt;

&lt;h3 id=&quot;重置一个-sequence&quot;&gt;重置一个 sequence&lt;/h3&gt;

&lt;p&gt;常用的有两个方法。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER SEQUENCE seq RESTART WITH 1;&lt;/code&gt;，将值重置为 1。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT setval('sequence', 1);&lt;/code&gt; 设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;last_value&lt;/code&gt; 的值为 1。&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT setval('sequence', 1, false);&lt;/code&gt; 设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;last_value&lt;/code&gt; 的值为 1，&lt;code class=&quot;highlighter-rouge&quot;&gt;is_called&lt;/code&gt; 为 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 08 Dec 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/12/08/postgres-note-4/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/12/08/postgres-note-4/</guid>
        
        <category>database</category>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第37期 - 2018-11-11</title>
        <description>&lt;h2 id=&quot;mysql-high-availability-at-github&quot;&gt;MySQL High Availability at GitHub&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://githubengineering.com/mysql-high-availability-at-github/&quot;&gt;https://githubengineering.com/mysql-high-availability-at-github/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;GitHub 将 MySQL 的高可用方案从 VIP + DNS 的方案，迁移到了使用 anycast + GLB + Consul + orchestrator raft 的方案。改进了数据库 down 的切换时间，基本维持在 10 到 13 秒之间。&lt;/p&gt;

&lt;p&gt;没想看到这篇文章过了没几天，GitHub 就遇到了一次存储故障。&lt;/p&gt;

&lt;h2 id=&quot;ubuntu-1810-released&quot;&gt;Ubuntu 18.10 released&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.omgubuntu.co.uk/2018/10/ubuntu-18-10-released-review&quot;&gt;https://www.omgubuntu.co.uk/2018/10/ubuntu-18-10-released-review&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;cost-of-a-join&quot;&gt;Cost of a Join&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.brianlikespostgres.com/cost-of-a-join.html&quot;&gt;https://www.brianlikespostgres.com/cost-of-a-join.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;作者通过测试说明了，做 inner join 的成本其实很低，尤其是加上外键的索引之后。文章中使用的画图服务 plot.ly 不错。&lt;/p&gt;

&lt;h2 id=&quot;why-we-decided-to-rewrite-ubers-driver-app&quot;&gt;Why We Decided to Rewrite Uber’s Driver App&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://eng.uber.com/rewrite-uber-carbon-app/关于迁移的部分很值得一读。&quot;&gt;https://eng.uber.com/rewrite-uber-carbon-app/关于迁移的部分很值得一读。&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Uber 发现一边迁移到新架构，一边做新功能的办法是不行的，最后总会留下遗留的代码，导致迁移失败。而这种迁移失败是 Uber 技术债务的主要原因。&lt;/li&gt;
  &lt;li&gt;迁移会导致不稳定性情况大量出现。&lt;/li&gt;
  &lt;li&gt;在迁移过程中进行新功能开发，总是导致新功能无法被完全实现。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;glb-githubs-open-source-load-balancer&quot;&gt;GLB: GitHub’s open source load balancer&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://githubengineering.com/glb-director-open-source-load-balancer/&quot;&gt;https://githubengineering.com/glb-director-open-source-load-balancer/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;GitHub 在使用过程中发现现有的负载均衡方案有几个典型问题，于是决定自己开发了一套，还上了 DPDK。&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Nov 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/11/11/write-what-i-have-037/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/11/11/write-what-i-have-037/</guid>
        
        <category>cloud</category>
        
        <category>database</category>
        
        <category>linux</category>
        
        <category>distributed-computing</category>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第36期 - 2018-10-21</title>
        <description>&lt;h2 id=&quot;amazon-rds-for-postgresql-now-supports-iam-authentication&quot;&gt;Amazon RDS for PostgreSQL now supports IAM Authentication&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-postgresql-now-supports-iam-authentication/&quot;&gt;https://aws.amazon.com/about-aws/whats-new/2018/09/amazon-rds-postgresql-now-supports-iam-authentication/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;RDS Postgres 9.5 以上的版本可以使用 IAM 来管理用户登陆信息了。&lt;/p&gt;

&lt;h2 id=&quot;postgresql的sql高级特性&quot;&gt;PostgreSQL的SQL高级特性&lt;/h2&gt;

&lt;p&gt;https://mp.weixin.qq.com/s/sFRZ2NjpKTofSZWVgXUG6g&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;lt;介绍了一些 Postgres 的 SQL 高级特性，包括： WITH，批量插入，RETURNING，UPSERT，数据抽样，聚合函数，窗口函数。&amp;gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;parallelism-in-postgresql-11&quot;&gt;Parallelism in Postgresql 11&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://speakerdeck.com/macdice/parallelism-in-postgresql-11&quot;&gt;https://speakerdeck.com/macdice/parallelism-in-postgresql-11&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;介绍了 postgres 11 引入的并行查询的实现方式。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;worker负责执行查询，gather负责合并查询结果。&lt;/li&gt;
  &lt;li&gt;多进程模型，每个worker一个进程。&lt;/li&gt;
  &lt;li&gt;以前pg的每个进程都能访问一个共享的内存区域。现在执行并行查询的进程之间还会使用一个动态的共享内存区，这个内存区在查询结束之后销毁。&lt;/li&gt;
  &lt;li&gt;引入了新的IPC机制。&lt;/li&gt;
  &lt;li&gt;对于seq scan，设计了一种机制来充分利用操作系统的pagecache预读机制。&lt;/li&gt;
  &lt;li&gt;对于index scan，目前只支持btree index，有可能会触发操作系统的pagecache预读机制。&lt;/li&gt;
  &lt;li&gt;加入了多个cost值到planner中。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-impact-of-virtualization-on-your-database&quot;&gt;The Impact of Virtualization on Your Database&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.scylladb.com/2018/06/21/impact-virtualization-database/&quot;&gt;https://www.scylladb.com/2018/06/21/impact-virtualization-database/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;ScyllaDB 测试了 AWS 新推出的 baremetal 实例 i3.metal，价格和 i3.16xlarge 一样。i3.metal 比 i3.16xlarge 能提供更多的 CPU 和内存。虽然只增加了 12% 的CPU，但是因为移除了虚拟化层，最后得到的写吞吐性能提升达到了 31%，读时延则最多达到了 8 倍，并且读时延更加稳定。&lt;/p&gt;

&lt;h2 id=&quot;new--managed-databases-for-amazon-lightsail&quot;&gt;New – Managed Databases for Amazon Lightsail&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/aws/new-managed-databases-for-amazon-lightsail/&quot;&gt;https://aws.amazon.com/blogs/aws/new-managed-databases-for-amazon-lightsail/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;AWS Lightsail 现在支持支持数据库实例了，最便宜的版本只要 15 美元一个月。&lt;/p&gt;

&lt;h2 id=&quot;postgresql-11-released&quot;&gt;PostgreSQL 11 Released!&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.postgresql.org/about/news/1894/&quot;&gt;https://www.postgresql.org/about/news/1894/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;带来好多新特性，以及性能提升。&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Oct 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/10/21/write-what-i-have-036/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/10/21/write-what-i-have-036/</guid>
        
        <category>cloud</category>
        
        <category>golang</category>
        
        <category>database</category>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第35期 - 2018-09-30</title>
        <description>&lt;h2 id=&quot;postgresql-10-identity-columns-explained&quot;&gt;PostgreSQL 10 identity columns explained&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.2ndquadrant.com/postgresql-10-identity-columns/&quot;&gt;https://blog.2ndquadrant.com/postgresql-10-identity-columns/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Postgres 10 引入了一个新特性：identity columns。用于生成符合SQL标准的数字递增式 id 列。在这之前postgres的id列一般是使用sequence来实现 id 列，但是这种实现方式引入了两个对象，一个是表本身，另外一个是表所使用的sequence。使用新的 identity column 特性之后，就不存在单独的sequence序列了，对于数据库的管理来说更为简单且不容易出错。文中就举了几个方面的例子说明了改动前后的区别。&lt;/p&gt;

&lt;h2 id=&quot;a-missing-link-in-postgres-11-fast-column-creation-with-defaults&quot;&gt;A Missing Link in Postgres 11: Fast Column Creation with Defaults&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://brandur.org/postgres-default&quot;&gt;https://brandur.org/postgres-default&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Postgres 11 引入了一种新的实现来支持 ALTER TABLE ADD COLUMN NOT NULL DEFAULT 这样的修改。原来这种修改需要使用 EXCLUSIVE LOCK锁住整个表，然后对表执行rewrite。新的实现是在 pg_attribute 中加入两列：atthasmissing 和 attmissingvalue，当数据库要返回一行数据时，如果一个列的值不存在，那么就会检查这两列，返回用户设置的默认值。新插入的行则直接设置指定的默认值。&lt;/p&gt;

&lt;h2 id=&quot;when-should-i-use-amazon-aurora-and-when-should-i-use-rds-mysql&quot;&gt;When Should I Use Amazon Aurora and When Should I use RDS MySQL?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.percona.com/blog/2018/07/17/when-should-i-use-amazon-aurora-and-when-should-i-use-rds-mysql/&quot;&gt;https://www.percona.com/blog/2018/07/17/when-should-i-use-amazon-aurora-and-when-should-i-use-rds-mysql/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Percona公司写的文章，告诉你什么时候应该选RDS，什么时候应该选Aurora。文章最后有 TL;DR，可以直接看结果。简单的总结一下就是，Aurora属于NewSQL，虽然兼容MySQL协议，但是由于架构不同，所以性能、费用、兼容性，都和RDS MySQL有不一样的地方。你可以认为Aurora 是 TiDB，而RDS就是MySQL。&lt;/p&gt;

&lt;h2 id=&quot;pg_cron-run-periodic-jobs-in-postgresql&quot;&gt;pg_cron: Run periodic jobs in PostgreSQL&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.citusdata.com/blog/2016/09/09/pgcron-run-periodic-jobs-in-postgres/&quot;&gt;https://www.citusdata.com/blog/2016/09/09/pgcron-run-periodic-jobs-in-postgres/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Citus 出的一个支持在pg中执行cron任务的扩展：https://github.com/citusdata/pg_cron 。用起来很方便啊。而且支持备机变成主之后，自动开始运行cron job。&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/09/30/write-what-i-have-035/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/09/30/write-what-i-have-035/</guid>
        
        <category>cloud</category>
        
        <category>database</category>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第34期 - 2018-09-24</title>
        <description>&lt;h2 id=&quot;introducing-the-tink-cryptographic-software-library&quot;&gt;Introducing the Tink cryptographic software library&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://opensource.googleblog.com/2018/08/introducing-tink-cryptographic-library.html&quot;&gt;https://opensource.googleblog.com/2018/08/introducing-tink-cryptographic-library.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Google开源的Tink密码学库，支持多种语言，设计思想是提供受限的API功能，防止由于误用接口导致的安全问题。&lt;/p&gt;

&lt;h2 id=&quot;helping-go-developers-build-better-cloud-apps-faster&quot;&gt;Helping Go developers build better cloud apps faster&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/blog/helping-go-developers-build-better-cloud-apps-faster/&quot;&gt;https://azure.microsoft.com/en-us/blog/helping-go-developers-build-better-cloud-apps-faster/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;微软介绍了自己为了让用户使用Go在Azure上开发云原生应用所作的工作。主要包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2月份开源的Go SDK &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-go&quot;&gt;https://github.com/Azure/azure-sdk-for-go&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;以及针对几个专门服务开发的SDK
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/Azure/azure-service-bus-go&quot;&gt;https://github.com/Azure/azure-service-bus-go&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/Azure/azure-event-hubs-go&quot;&gt;https://github.com/Azure/azure-event-hubs-go&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/Azure/azure-storage-blob-go&quot;&gt;https://github.com/Azure/azure-storage-blob-go&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Buffalo项目：&lt;a href=&quot;https://gobuffalo.io/en&quot;&gt;https://gobuffalo.io/en&lt;/a&gt;。用于帮助开发者快速开发web应用，帮你生成不同功能的脚手架代码，帮你部署到Azure上面。
    &lt;ul&gt;
      &lt;li&gt;可以查看这个介绍视频：&lt;a href=&quot;https://channel9.msdn.com/shows/azure-friday/Go-on-Azure-Part-7-Build-a-Go-app-with-Buffalo-and-deploy-to-Azure&quot;&gt;https://channel9.msdn.com/shows/azure-friday/Go-on-Azure-Part-7-Build-a-Go-app-with-Buffalo-and-deploy-to-Azure&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;另外，我发现 gobuffalo下，有挺多Go的库。&lt;a href=&quot;https://github.com/gobuffalo&quot;&gt;https://github.com/gobuffalo&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;announcing-project-athens-and-gophersource-for-the-go-community&quot;&gt;Announcing Project Athens and GopherSource for the Go community&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://open.microsoft.com/2018/08/28/announcing-project-athens-gophersource-go-community/&quot;&gt;https://open.microsoft.com/2018/08/28/announcing-project-athens-gophersource-go-community/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;微软发布的Go Module Proxy Server，目前还处在早期阶段。&lt;/p&gt;

&lt;h2 id=&quot;googles-approach-to-observability&quot;&gt;Google’s Approach to Observability&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://medium.com/observability/googles-approach-to-observability-frameworks-c89fc1f0e058&quot;&gt;https://medium.com/observability/googles-approach-to-observability-frameworks-c89fc1f0e058&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;介绍了Google内部对于tracing的使用理念，也就是现在开始流行的opentracing等方案。&lt;/p&gt;

&lt;h2 id=&quot;managing-resources-for-large-scale-testing&quot;&gt;Managing resources for large-scale testing&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://code.fb.com/android/managing-resources-for-large-scale-testing/&quot;&gt;https://code.fb.com/android/managing-resources-for-large-scale-testing/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;介绍了Facebook的One World，一个大规模的测试服务，连接了物理设备和模拟器，为开发人员提供方便的测试环境，设置可以让开发人员把自己的设备接入进来进行测试。&lt;/p&gt;

&lt;h2 id=&quot;postgres-11---a-first-look&quot;&gt;Postgres 11 - a First Look&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://www.craigkerstiens.com/2018/09/20/postgresql-11-a-first-look/&quot;&gt;http://www.craigkerstiens.com/2018/09/20/postgresql-11-a-first-look/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;介绍了即将发布的Postgres 11的一些新特性，包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;可以使用 exit 或者 quit 退出psql。&lt;/li&gt;
  &lt;li&gt;add column with default 提升了性能，不用害怕migration的时候导致全表卡住。&lt;/li&gt;
  &lt;li&gt;性能的提升，包括并发和初步的JIT支持。&lt;/li&gt;
  &lt;li&gt;继续改进统计功能。&lt;/li&gt;
  &lt;li&gt;引入了 keeping standbys warm 的功能。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 24 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/09/24/write-what-i-have-034/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/09/24/write-what-i-have-034/</guid>
        
        <category>cloud</category>
        
        <category>golang</category>
        
        <category>storage</category>
        
        <category>database</category>
        
        <category>security</category>
        
        
      </item>
    
      <item>
        <title>Postgres的使用 - 3</title>
        <description>&lt;h2 id=&quot;pg_cancel_backend-和-pg_terminate_backend-函数&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_cancel_backend&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_terminate_backend&lt;/code&gt; 函数&lt;/h2&gt;

&lt;p&gt;当你从 &lt;em&gt;pg_stat_activity&lt;/em&gt; 确认了一个慢查询的时候，你可以获取这个慢查询所在的 &lt;strong&gt;pid&lt;/strong&gt;。然后，你就可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_cancel_backend&lt;/code&gt; 或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_terminate_backend&lt;/code&gt;来终止这个慢查询。这两个函数的使用方法如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_cancel_backend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;40955&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;pg_cancel_backend&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-------------------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_terminate_backend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2237&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;pg_terminate_backend&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----------------------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这两个函数的参数都是 &lt;em&gt;pid&lt;/em&gt;，返回值是 &lt;em&gt;true&lt;/em&gt; 或者 &lt;em&gt;false&lt;/em&gt;，表示向进程发送信号是否成功。&lt;/p&gt;

&lt;p&gt;这两个函数的区别如下：&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_cancel_backend&lt;/code&gt; 是终止当前这次的查询，连接依旧被保持，其发送的是 &lt;em&gt;SIGINT&lt;/em&gt; 信号。&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_terminate_backend&lt;/code&gt;会终止连接，其发送的是 &lt;em&gt;SIGTERM&lt;/em&gt; 信号。&lt;/p&gt;

&lt;h3 id=&quot;示例&quot;&gt;示例&lt;/h3&gt;

&lt;p&gt;我们可以构造一个例子来看一下他们的区别。这个例子需要启用三个 psql，分别命名为 &lt;strong&gt;A&lt;/strong&gt;, &lt;strong&gt;B&lt;/strong&gt;, &lt;strong&gt;Manage&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;psql A&lt;/strong&gt; 中执行如下语句，启动一个事务，然后锁住一些行：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;uuid&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;admin_ip&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;----+----------------------------------+---------+--------------+--------&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26197&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b2829544da5a54d23d5b7622eaa&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node204&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;252&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;204&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;active&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此时，因为还没有提交事务，所以 &lt;strong&gt;psql A&lt;/strong&gt; 锁住了这一行。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;psql B&lt;/strong&gt; 执行如下语句：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后该查询就会挂起等待。&lt;/p&gt;

&lt;p&gt;可以通过 &lt;strong&gt;psql Manage&lt;/strong&gt; 来查询：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postgres'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                          &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;---------+-------+----------+-----------------+---------------+---------------------+----------------------------------------------------------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37159&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Lock&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transactionid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;active&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36520&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idle&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37564&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;active&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postgres'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;其中 &lt;em&gt;pid&lt;/em&gt; 为 &lt;strong&gt;37159&lt;/strong&gt; 的连接所执行的查询，正在等待锁。这个时候我们就可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_cancel_backend&lt;/code&gt; 来取消这次查询：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_cancel_backend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;37159&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;pg_cancel_backend&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-------------------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此时，在 &lt;strong&gt;psql B&lt;/strong&gt;中，可以看到：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;canceling&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;statement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;due&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CONTEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tuple&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relation&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;此时，在 &lt;strong&gt;psql Manage&lt;/strong&gt; 中查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_stat_activity&lt;/code&gt; 可以看到 &lt;strong&gt;psql B&lt;/strong&gt; 的连接还在，pid 不变，但是连接已经处于 &lt;strong&gt;idle&lt;/strong&gt; 状态：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postgres'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                                                        &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;---------+-------+----------+-----------------+------------+---------------------+-------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37159&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idle&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36520&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idle&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37564&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;active&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postgres'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接下来来测试另外一个函数，同样在 &lt;strong&gt;psql B&lt;/strong&gt; 中执行如下语句来触发挂起：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后，在 &lt;strong&gt;psql Manage&lt;/strong&gt; 中执行：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-psql&quot; data-lang=&quot;psql&quot;&gt;mydb=# select pg_terminate_backend(37159);
 pg_terminate_backend
----------------------
 t
(1 row)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;在 &lt;strong&gt;psql B&lt;/strong&gt; 中可以看到：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FATAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;terminating&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;due&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;administrator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CONTEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tuple&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;relation&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;host&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;closed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unexpectedly&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;probably&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;means&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terminated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abnormally&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Attempting&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Succeeded&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;表明，连接已经断开了。此时，再次查看 &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_stat_activity&lt;/code&gt; 可以发现 pid 已经变了，变成了 &lt;strong&gt;39248&lt;/strong&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postgres'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                                                          &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;---------+-------+----------+-----------------+------------+---------------------+-------------------------------------------------------------------------------------------------------------------------&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39248&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idle&lt;/span&gt;                &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36520&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idle&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;mydb&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37564&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;postgres&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;active&lt;/span&gt;              &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postgres'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Mon, 24 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/09/24/postgres-note-3/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/09/24/postgres-note-3/</guid>
        
        <category>database</category>
        
        
      </item>
    
      <item>
        <title>Docker 的 tty size 问题</title>
        <description>&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;由于把 Postgres 运行在 Docker 容器里，所以经常使用如下命令登录到数据库 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec -it -u postgres mypg psql mydb&lt;/code&gt;。然后在 psql 提示符下执行操作。然后经常会出现输入太长的 sql 语句时，psql 会在还没遇到终端宽度限制之前就开始换行，而且是把把输入回显换行到上面一行。这个行为说明了在容器内的 tty 的配置出现了问题。但是，很奇怪的是，退出 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec&lt;/code&gt; 之后，再次进入，就不会遇到这个问题了。&lt;/p&gt;

&lt;h2 id=&quot;现象分析&quot;&gt;现象分析&lt;/h2&gt;
&lt;p&gt;这个问题看起来应该出在是 Docker 容器对于 tty size 的处理上。当出现这个问题的时候，通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec&lt;/code&gt; 进入容器的 shell，执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;stty size&lt;/code&gt; 会得到如下结果：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; postgres postgres bash
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty &lt;/span&gt;size
&lt;span class=&quot;nb&quot;&gt;stty&lt;/span&gt;: standard input
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty &lt;/span&gt;size 2&amp;gt; /dev/null
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty &lt;/span&gt;size &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null
&lt;span class=&quot;nb&quot;&gt;stty&lt;/span&gt;: standard input
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
speed 38400 baud&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty&lt;/span&gt;: standard input
 line &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
intr &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^C&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; quit &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^&lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt; erase &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^?&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^U&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; eof &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^D&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; eol &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
eol2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; swtch &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &amp;lt;undef&amp;gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; start &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^Q&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; stop &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^S&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; susp &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^Z&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; rprnt &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^R&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
werase &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^W&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; lnext &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^V&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; flush &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ^O&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; min &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-parenb&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-parodd&lt;/span&gt; cs8 &lt;span class=&quot;nt&quot;&gt;-hupcl&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-cstopb&lt;/span&gt; cread &lt;span class=&quot;nt&quot;&gt;-clocal&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-crtscts&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-ignbrk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-brkint&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ignpar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-parmrk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-inpck&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-istrip&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-inlcr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-igncr&lt;/span&gt; icrnl ixon &lt;span class=&quot;nt&quot;&gt;-ixoff&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-iuclc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ixany&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-imaxbel&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-iutf8&lt;/span&gt;
opost &lt;span class=&quot;nt&quot;&gt;-olcuc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ocrnl&lt;/span&gt; onlcr &lt;span class=&quot;nt&quot;&gt;-onocr&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-onlret&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ofill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ofdel&lt;/span&gt; nl0 cr0 tab0 bs0 vt0 ff0
isig icanon iexten &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;echoe echok &lt;span class=&quot;nt&quot;&gt;-echonl&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-noflsh&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xcase&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-tostop&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-echoprt&lt;/span&gt;
echoctl echoke
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$LINES&lt;/span&gt;
24
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$COLUMNS&lt;/span&gt;
80
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty &lt;/span&gt;rows 40 cols 100
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
0
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty &lt;/span&gt;size
40 100&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;从上面的命令可以看出，&lt;code class=&quot;highlighter-rouge&quot;&gt;stty&lt;/code&gt; 获取当前终端的窗口大小失败了，所以 &lt;code class=&quot;highlighter-rouge&quot;&gt;psql&lt;/code&gt; 程序的回显就错乱了。不过，这里要注意的是，&lt;code class=&quot;highlighter-rouge&quot;&gt;stty size&lt;/code&gt; 命令没有返回失败（返回值为0）。但是，通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;stty rows 40 cols 100&lt;/code&gt; 命令设置 tty 的参数确实可以成功的，说明问题可能是因为 tty 参数没有被正常初始化造成的。另外需要说明的是，&lt;strong&gt;这个问题不是必现的&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;这个问题在 Docker 项目的 issue 里被提到过，地址是 &lt;a href=&quot;https://github.com/moby/moby/issues/33794&quot;&gt;https://github.com/moby/moby/issues/33794&lt;/a&gt;。根据该 issue 的记录，目前该问题还没有找到原因。&lt;/p&gt;

&lt;p&gt;关于这个问题，我不确定是 kernel 引起的，还是 shell 程序引起的，因为 &lt;code class=&quot;highlighter-rouge&quot;&gt;termio&lt;/code&gt; 结构体会从内核拷贝到用户空间。&lt;/p&gt;

&lt;h3 id=&quot;stty-size-的返回值为什么是0&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stty size&lt;/code&gt; 的返回值为什么是0？&lt;/h3&gt;

&lt;p&gt;我想知道为什么&lt;code class=&quot;highlighter-rouge&quot;&gt;stty&lt;/code&gt;命令没有返回失败，所以去看了一下代码。我使用的是 Postgres Alpine 的镜像，安装的 shell 环境是 BusyBox，通过查看 BusyBox 的代码可以找到这里：&lt;a href=&quot;https://github.com/mirror/busybox/blob/master/coreutils/stty.c#L899&quot;&gt;https://github.com/mirror/busybox/blob/master/coreutils/stty.c#L899&lt;/a&gt;，对应的代码是：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;display_window_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fancy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\0&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%s: no size information for this device&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_terminal_width_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EINVAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fancy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;perror_on_device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;wrapf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fancy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rows %u; columns %u;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%u %u&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个函数获取当前窗口的大小，&lt;code class=&quot;highlighter-rouge&quot;&gt;stty size&lt;/code&gt;命令会直接调用这个函数。这个函数继续调用了下面这个函数 &lt;a href=&quot;https://github.com/mirror/busybox/blob/master/libbb/xfuncs.c#L263&quot;&gt;https://github.com/mirror/busybox/blob/master/libbb/xfuncs.c#L263&lt;/a&gt;：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* It is perfectly ok to pass in a NULL for either width or for
 * height, in which case that value will not be set.  */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FAST_FUNC&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_terminal_width_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;winsize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;close_me&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isatty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDOUT_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isatty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDERR_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDERR_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isatty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STDIN_FILENO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;close_me&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/dev/tty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;O_RDONLY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws_row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws_col&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;cm&quot;&gt;/* I've seen ioctl returning 0, but row/col is (still?) 0.
	 * We treat that as an error too.  */&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ioctl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIOCGWINSZ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws_row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wh_helper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws_row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;LINES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wh_helper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;win&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ws_col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;COLUMNS&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close_me&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close_me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里的关键点就在于 &lt;code class=&quot;highlighter-rouge&quot;&gt;get_terminal_width_height&lt;/code&gt; 函数的内部注释，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;ioctl&lt;/code&gt; 可能返回0，但是却没有获取到窗口大小。这种情况下，该函数返回 &lt;code class=&quot;highlighter-rouge&quot;&gt;win.ws_row == 0&lt;/code&gt;，即 &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;。当 &lt;code class=&quot;highlighter-rouge&quot;&gt;get_terminal_width_height&lt;/code&gt; 函数返回 &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;时，调用者 &lt;code class=&quot;highlighter-rouge&quot;&gt;display_window_size&lt;/code&gt; 的处理逻辑如下：因为返回值不等于 &lt;code class=&quot;highlighter-rouge&quot;&gt;EINVAL&lt;/code&gt;，所以直接调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;perror_on_device&lt;/code&gt;，这个函数会调用 &lt;em&gt;libbb/perror_msg.c&lt;/em&gt; 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;bb_perror_msg&lt;/code&gt; 函数，输出一个错误信息，然后就返回了（&lt;strong&gt;并不会导致程序错误退出&lt;/strong&gt;）。随后，&lt;code class=&quot;highlighter-rouge&quot;&gt;display_window_size&lt;/code&gt; 函数返回，&lt;code class=&quot;highlighter-rouge&quot;&gt;stty size&lt;/code&gt;命令正常返回。&lt;/p&gt;

&lt;p&gt;这个看起来是个 BusyBox 的 bug，所以有点怀疑是否是 Docker 和 BusyBox 的配合有问题，导致了bug。&lt;/p&gt;

&lt;h2 id=&quot;解决办法&quot;&gt;解决办法&lt;/h2&gt;

&lt;p&gt;虽然没有找到原因，但是解决办法还是有的，就是在进入 shell 前显示的设定终端窗口的大小，通过指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;COLUMNS&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;LINES&lt;/code&gt; 两个环境变量的方式，命令如下：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; postgres &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;COLUMNS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput cols&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;LINES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput lines&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; postgres bash
bash-4.3&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty &lt;/span&gt;size
47 272&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sat, 22 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/09/22/docker-tty-size-problem/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/09/22/docker-tty-size-problem/</guid>
        
        <category>docker</category>
        
        
      </item>
    
      <item>
        <title>Postgres的使用 - 2</title>
        <description>&lt;h2 id=&quot;pg_stat_activity-视图&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_stat_activity&lt;/code&gt; 视图&lt;/h2&gt;

&lt;p&gt;在 Postgres 中，&lt;code class=&quot;highlighter-rouge&quot;&gt;pg_stat_activity&lt;/code&gt; 是一个视图，每行对应一个服务器进程，用来显示进程当前活动有关的信息。因此，我们可以使用如下的查询来获取长时间执行的查询或者操作。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;client_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;backend_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;xact_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;xact_duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;query_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;query_duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client_addr&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backend_start&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;backend_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xact_start&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xact_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;EXTRACT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOCH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xact_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xact_duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_start&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;EXTRACT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EPOCH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^SELECT.*FROM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'FROM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'i'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_stat_activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'idle'&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'idle in transaction'&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgsa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'idle in transaction (aborted)'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idleconnections&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;query_duration&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个查询用到的字段在 9.2 版本就都支持了，9.6 版本还增加了其他字段，有需要可以自己对比一下文档：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;9.2: &lt;a href=&quot;https://www.postgresql.org/docs/9.2/static/monitoring-stats.html&quot;&gt;https://www.postgresql.org/docs/9.2/static/monitoring-stats.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;9.6: &lt;a href=&quot;https://www.postgresql.org/docs/9.6/static/monitoring-stats.html&quot;&gt;https://www.postgresql.org/docs/9.6/static/monitoring-stats.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用到的几个字段的含义如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;datname&lt;/code&gt;: 数据库名称。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;username&lt;/code&gt;: 用户名。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;client_addr&lt;/code&gt;: 客户端地址。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt;: 连接的当前状态，一共有6种，这里需要显示的是其中3种&lt;strong&gt;非空闲&lt;/strong&gt;的。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;backend_start&lt;/code&gt;: 连接开始时间。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;xact_start&lt;/code&gt;: 当前事务开始时间。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXTRACT(EPOCH FROM (now() - pgsa.xact_start)) AS xact_duration&lt;/code&gt;: 计算当前事务进行了多久，单位是秒。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;query_start&lt;/code&gt;: 当前查询开始的时间，一个事务内可能有多个查询。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;EXTRACT(EPOCH FROM (now() - pgsa.query_start)) AS query_duration&lt;/code&gt;: 计算当前查询进行了多久，单位是秒。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;REGEXP_REPLACE(REPLACE(pgsa.query, CHR(10), ' '), '^SELECT.*FROM', 'FROM', 'i') AS query&lt;/code&gt;: 查询语句的内容，这里把换行符替换成空格，而且会尝试把 &lt;em&gt;SELECT … FROM&lt;/em&gt; 替换为 &lt;em&gt;FROM&lt;/em&gt;（方便查看查询的是哪个表，不过如果语句过长，原始查询语句只会保留前 1024 个字符，这个是由 &lt;strong&gt;track_activity_query_size&lt;/strong&gt; 参数决定的）。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 21 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/09/21/postgres-note-2/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/09/21/postgres-note-2/</guid>
        
        <category>database</category>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第33期 - 2018-09-14</title>
        <description>&lt;h2 id=&quot;how-a-single-postgresql-config-change-improved-slow-query-performance-by-50x&quot;&gt;How a single PostgreSQL config change improved slow query performance by 50x&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://amplitude.engineering/how-a-single-postgresql-config-change-improved-slow-query-performance-by-50x-85593b8991b0&quot;&gt;https://amplitude.engineering/how-a-single-postgresql-config-change-improved-slow-query-performance-by-50x-85593b8991b0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;因为默认的配置中，random_page_cost = 4, seq_page_cost = 1，是针对HDD调优的，当你使用SSD时，实际情况并不是这样的。如果不修改配置，就会导致Postgres选择一个更差的计划。&lt;/p&gt;

&lt;h2 id=&quot;a-one-size-fits-all-database-doesnt-fit-anyone&quot;&gt;A one size fits all database doesn’t fit anyone&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.allthingsdistributed.com/2018/06/purpose-built-databases-in-aws.html&quot;&gt;https://www.allthingsdistributed.com/2018/06/purpose-built-databases-in-aws.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;AWS CTO Werner描述了为什么AWS要提供这么多不同的数据库服务，包括：关系数据库，kv数据库，文档数据库，图数据库，内存数据库和搜索数据库。因为不同的数据库类型用来解决不同的问题，没有一种数据库可以解决所有的问题。AWS的许多客户都已经不再开发一个巨应用了，都改微服务了，每个服务可以选择自己需要的数据库。&lt;/p&gt;

&lt;h2 id=&quot;google-titan-security-key-is-now-on-sale-for-50&quot;&gt;Google ‘Titan Security Key’ Is Now On Sale For $50&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://thehackernews.com/2018/08/google-titan-security-key.html&quot;&gt;https://thehackernews.com/2018/08/google-titan-security-key.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Google 推出了自己的硬件秘钥Titan，售价50美元，支持蓝牙，支持所有usb接口，电脑只要有Chrome就能用。目前尽在没有有售。&lt;/p&gt;

&lt;h2 id=&quot;influxdb-eventual-consistency&quot;&gt;InfluxDB: Eventual Consistency&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.influxdata.com/blog/eventual-consistency-hhq/&quot;&gt;https://www.influxdata.com/blog/eventual-consistency-hhq/&lt;/a&gt;&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;使用 Hinted Handoff Queue 来保存失败节点的消息，也就是一个暂存区。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.influxdata.com/blog/eventual-consistency-anti-entropy/&quot;&gt;https://www.influxdata.com/blog/eventual-consistency-anti-entropy/&lt;/a&gt;&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;实现 Anti Entropy，也就是避免数据的不一致性。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这两篇其实只是科普文章，用来介绍 InfluxDB Enterprise 如何实现最终一致性的。&lt;/p&gt;

&lt;h2 id=&quot;metrics-to-monitor-in-your-postgresql-database&quot;&gt;Metrics to Monitor in Your PostgreSQL Database&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.influxdata.com/blog/metrics-to-monitor-in-your-postgresql-database/&quot;&gt;https://www.influxdata.com/blog/metrics-to-monitor-in-your-postgresql-database/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;介绍了postgres的几个用于监控的数据以及使用场景。&lt;/p&gt;

&lt;h2 id=&quot;on-premises-hipchat-replacements-in-2018&quot;&gt;On-Premises HipChat Replacements in 2018&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://stackshare.io/posts/on-premises-hipchat-replacements-in-2018&quot;&gt;https://stackshare.io/posts/on-premises-hipchat-replacements-in-2018&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;介绍了在2018年，你要搭一个自己的类Slack服务，有哪些选择？忘了HipChat吧，那个过时了，本文推荐了3个：Rocket.Chat, Zulip 和 Mattermost。&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/09/14/write-what-i-have-033/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/09/14/write-what-i-have-033/</guid>
        
        <category>cloud</category>
        
        <category>golang</category>
        
        <category>storage</category>
        
        <category>database</category>
        
        <category>security</category>
        
        
      </item>
    
      <item>
        <title>Systemd unit 的所有状态</title>
        <description>&lt;p&gt;Systemd 管理的资源的单位是 unit，最常见的 unit 就是一个服务。我们经常使用 systemctl status 查看某些服务的状态，来确认这个服务的运行是否正常。像下面这样：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;➜ ~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status docker
● docker.service - Docker Application Container Engine
   Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/lib/systemd/system/docker.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset: enabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Active: active &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;running&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; since Thu 2018-09-13 11:53:33 CST&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 1 day 2h ago
     Docs: https://docs.docker.com
Main PID: 1917 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dockerd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这里的 &lt;strong&gt;Loaded&lt;/strong&gt; 和 &lt;strong&gt;Active&lt;/strong&gt; 两行就表示这个 unit 的状态，其中 &lt;strong&gt;Loaded&lt;/strong&gt; 表示这个 unit 是否已经正确读到内存之中，&lt;strong&gt;Active&lt;/strong&gt; 则表示这个 unit 的运行状态。另外，&lt;strong&gt;Active&lt;/strong&gt; 这里包含了一个 state 和一个 substate，括号内的是 substate，state 的状态定义对所有 unit 都是一样的，但是不同类型的 unit 会定义不同的 substate （systemd 有 11 种类型的 unit，具体请查看 man page）。&lt;/p&gt;

&lt;p&gt;那么一个 unit 到底有哪些状态呢？我发现我在 man page 中找不到所有状态的说明，但是有个神奇的命令却能列出所有的状态：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;systemctl &lt;span class=&quot;nt&quot;&gt;--state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help

&lt;/span&gt;Available unit load states:
stub
loaded
not-found
error
merged
masked

Available unit active states:
active
reloading
inactive
failed
activating
deactivating

Available automount unit substates:
dead
waiting
running
failed

Available device unit substates:
dead
tentative
plugged

Available mount unit substates:
dead
mounting
mounting-done
mounted
remounting
unmounting
remounting-sigterm
remounting-sigkill
unmounting-sigterm
unmounting-sigkill
failed

Available path unit substates:
dead
waiting
running
failed

Available scope unit substates:
dead
running
abandoned
stop-sigterm
stop-sigkill
failed

Available service unit substates:
dead
start-pre
start
start-post
running
exited
reload
stop
stop-sigabrt
stop-sigterm
stop-sigkill
stop-post
final-sigterm
final-sigkill
failed
auto-restart

Available slice unit substates:
dead
active

Available socket unit substates:
dead
start-pre
start-chown
start-post
listening
running
stop-pre
stop-pre-sigterm
stop-pre-sigkill
stop-post
final-sigterm
final-sigkill
failed

Available swap unit substates:
dead
activating
activating-done
active
deactivating
deactivating-sigterm
deactivating-sigkill
failed

Available target unit substates:
dead
active

Available timer unit substates:
dead
waiting
running
elapsed
failed&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Fri, 14 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2018/09/14/systemd-unit-states/</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2018/09/14/systemd-unit-states/</guid>
        
        <category>linux</category>
        
        
      </item>
    
  </channel>
</rss>
