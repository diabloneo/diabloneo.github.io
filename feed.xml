<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coffee, Coke and Code</title>
    <description>Archive diabloneo's articles.
</description>
    <link>http://diabloneo.github.io//</link>
    <atom:link href="http://diabloneo.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 12 Nov 2017 22:32:23 +0800</pubDate>
    <lastBuildDate>Sun, 12 Nov 2017 22:32:23 +0800</lastBuildDate>
    <generator>Jekyll v3.4.0</generator>
    
      <item>
        <title>想到什么写什么周报 第6期 - 2017-11-12</title>
        <description>&lt;h1 id=&quot;announcing-goland-former-gogland-eap-18-final-product-name-templates-support-and-more&quot;&gt;Announcing GoLand (Former Gogland) EAP 18: Final Product Name, Templates Support and More&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.jetbrains.com/go/2017/11/02/announcing-goland-former-gogland-eap-18-final-product-name-templates-support-and-more/&quot;&gt;https://blog.jetbrains.com/go/2017/11/02/announcing-goland-former-gogland-eap-18-final-product-name-templates-support-and-more/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;JetBrain的Go IDE确定名字为GoLand&lt;/p&gt;

&lt;h1 id=&quot;openstack-sydney-summit-2017-complete-keynote-session&quot;&gt;OpenStack Sydney Summit 2017 Complete Keynote Session&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=oCIRhleXztU&quot;&gt;https://www.youtube.com/watch?v=oCIRhleXztU&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ironic的使用率在过去6个月从9%增长到20%.&lt;/li&gt;
  &lt;li&gt;Kubernetes是OpenStack上用来管理应用最流行的方案，占比达到50%，已经是事实上的标准。&lt;/li&gt;
  &lt;li&gt;现在用户都会使用多个不同的开源项目来实现自己的业务需求，一个典型案例是：OpenStack+Kubernetes。OpenStack打算开始帮助用户更好的集成这些新技术。&lt;/li&gt;
  &lt;li&gt;中国市场在OpenStack生态中非常突出。腾讯表现抢眼。SuperUser候选，四家里有三家是中国公司，包括中国铁总、中国银联和腾讯。&lt;/li&gt;
  &lt;li&gt;istio.io An open platform to connect, manage, and secure microservices&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;the-past-and-future-of-vim-go&quot;&gt;The Past and Future of Vim-go&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://speakerdeck.com/farslan/the-past-and-future-of-vim-go&quot;&gt;https://speakerdeck.com/farslan/the-past-and-future-of-vim-go&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Vim-go的作者Fatih Arslan回顾了vim-go的发展历史，并且提到了接下来要做的一些改进。&lt;/p&gt;

&lt;h1 id=&quot;understanding-go-panic-output&quot;&gt;Understanding Go panic output&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://joeshaw.org/understanding-go-panic-output/&quot;&gt;https://joeshaw.org/understanding-go-panic-output/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;说明了Go panic时输出的栈信息的内容。&lt;/p&gt;
</description>
        <pubDate>Sun, 12 Nov 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/11/12/write-what-i-have-006.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/11/12/write-what-i-have-006.html</guid>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第5期 - 2017-10-29</title>
        <description>&lt;h1 id=&quot;go-192-发布&quot;&gt;Go 1.9.2 发布&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://golang.org/doc/devel/release.html#go1.9.minor&quot;&gt;https://golang.org/doc/devel/release.html#go1.9.minor&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;cri-o-the-project-to-run-containers-without-docker-reaches-10&quot;&gt;CRI-O, the Project to Run Containers without Docker, Reaches 1.0&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://thenewstack.io/cri-o-project-run-containers-without-docker-reaches-1-0/&quot;&gt;https://thenewstack.io/cri-o-project-run-containers-without-docker-reaches-1-0/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;容器运行时CRI-O 1.0版本发布，本文阐述了CRI-O和K8s的关系。CRI-O使得K8s可以用统一的接口调用容器运行时，可以避免现在Docker升级导致K8s不可用的情况。&lt;/p&gt;

&lt;h1 id=&quot;nuclio-the-new-serverless-superhero&quot;&gt;nuclio: The New Serverless Superhero&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.iguazio.com/nuclio-new-serverless-superhero/&quot;&gt;https://www.iguazio.com/nuclio-new-serverless-superhero/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;一个FaaS的开源实现。&lt;/p&gt;

&lt;h1 id=&quot;building-distributed-systems-and-microservices-in-go-with-nats-streaming&quot;&gt;Building Distributed Systems and Microservices in Go with NATS Streaming&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://medium.com/@shijuvar/building-distributed-systems-and-microservices-in-go-with-nats-streaming-d8b4baa633a2&quot;&gt;https://medium.com/@shijuvar/building-distributed-systems-and-microservices-in-go-with-nats-streaming-d8b4baa633a2&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;NATS是一个Go实现的消息队列服务，NATS Streaming是其中带消息持久化的实现，本文介绍了NATS Streaming的持久化实现以及使用方式。NATS Streaming目前还不支持集群。&lt;/p&gt;

&lt;h1 id=&quot;kubeadm-v18-released-introducing-easy-upgrades-for-kubernetes-clusters&quot;&gt;kubeadm v1.8 Released: Introducing Easy Upgrades for Kubernetes Clusters&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://blog.kubernetes.io/2017/10/kubeadm-v18-released.html&quot;&gt;http://blog.kubernetes.io/2017/10/kubeadm-v18-released.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-linux-foundation-releases-annual-kernel-development-report&quot;&gt;The Linux Foundation Releases Annual Kernel Development Report&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.linuxfoundation.org/press-release/linux-foundation-releases-annual-kernel-development-report/&quot;&gt;https://www.linuxfoundation.org/press-release/linux-foundation-releases-annual-kernel-development-report/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2017年度Linux内核开发报告&lt;/p&gt;

&lt;h1 id=&quot;kubernetes-182发布&quot;&gt;Kubernetes 1.8.2发布&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://groups.google.com/forum/#!topic/kubernetes-announce/9iA4Pw-obLQ&quot;&gt;https://groups.google.com/forum/#!topic/kubernetes-announce/9iA4Pw-obLQ&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;now-available--amazon-aurora-with-postgresql-compatibility&quot;&gt;Now Available – Amazon Aurora with PostgreSQL Compatibility&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/aws/now-available-amazon-aurora-with-postgresql-compatibility/&quot;&gt;https://aws.amazon.com/blogs/aws/now-available-amazon-aurora-with-postgresql-compatibility/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Amazon Aurora的PostgresSQL兼容性支持现在已经GA，与9.6.3版本兼容。&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/10/29/write-what-i-have-005.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/10/29/write-what-i-have-005.html</guid>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第4期 - 2017-10-22</title>
        <description>&lt;h1 id=&quot;go-192&quot;&gt;Go 1.9.2&lt;/h1&gt;

&lt;p&gt;预计下周发布&lt;/p&gt;

&lt;h1 id=&quot;ubuntu-1710-artful-aardvark-发布&quot;&gt;Ubuntu 17.10 Artful Aardvark 发布&lt;/h1&gt;

&lt;p&gt;Ubuntu 17.10已经发布，我升级后遇到了一些问题，&lt;a href=&quot;/2017/10/22/ubuntu-17.10-upgrade.html&quot;&gt;Ubuntu 17.10升级问题&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;ubuntu-13周年纪念&quot;&gt;Ubuntu 13周年纪念&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://www.omgubuntu.co.uk/2017/10/ubuntu-birthday-13th&quot;&gt;http://www.omgubuntu.co.uk/2017/10/ubuntu-birthday-13th&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;10月20号是Ubuntu的生日，已经13岁了。&lt;/p&gt;

&lt;h1 id=&quot;help-us-choose-a-name-for-our-go-ide&quot;&gt;Help us Choose a Name for our Go IDE&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.jetbrains.com/go/2017/10/13/help-us-choose-a-name-for-our-go-ide/?utm_source=weibo&amp;amp;utm_medium=regular_task&amp;amp;utm_campaign=Go&quot;&gt;https://blog.jetbrains.com/go/2017/10/13/help-us-choose-a-name-for-our-go-ide/?utm_source=weibo&amp;amp;utm_medium=regular_task&amp;amp;utm_campaign=Go&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;JetBrain正在开发的Go IDE公开征名。&lt;/p&gt;

&lt;h1 id=&quot;tidb-10-ga&quot;&gt;TiDB 1.0 GA&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://pingcap.github.io/blog/releases/2017/10/16/ga/&quot;&gt;https://pingcap.github.io/blog/releases/2017/10/16/ga/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;krack-demo-critical-key-reinstallation-attack-against-widely-used-wpa2-wi-fi-protocol&quot;&gt;KRACK Demo: Critical Key Reinstallation Attack Against Widely-Used WPA2 Wi-Fi Protocol&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://thehackernews.com/2017/10/wpa2-krack-wifi-hacking.html&quot;&gt;https://thehackernews.com/2017/10/wpa2-krack-wifi-hacking.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;中间人攻击的方式，通过诱导客户端重新使用对称秘钥来达到破解对称加密的目的。demo视频还演示了，破解WPA2加密后，还可以通过ssl bypass攻击，使得客户端脱离https。&lt;/p&gt;

&lt;p&gt;此次攻击的官网：&lt;a href=&quot;https://www.krackattacks.com/&quot;&gt;https://www.krackattacks.com/&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;amazon-lightsail-update--launch-and-manage-windows-virtual-private-servers&quot;&gt;Amazon Lightsail Update – Launch and Manage Windows Virtual Private Servers&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://aws.amazon.com/cn/blogs/aws/amazon-lightsail-update-launch-and-manage-windows-virtual-private-servers/&quot;&gt;https://aws.amazon.com/cn/blogs/aws/amazon-lightsail-update-launch-and-manage-windows-virtual-private-servers/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;aws lightsail支持windows了。&lt;/p&gt;

&lt;h1 id=&quot;docker-platform-and-moby-project-add-kubernetes&quot;&gt;DOCKER PLATFORM AND MOBY PROJECT ADD KUBERNETES&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.docker.com/2017/10/kubernetes-docker-platform-and-moby-project/&quot;&gt;https://blog.docker.com/2017/10/kubernetes-docker-platform-and-moby-project/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Docker官方宣布支持Kubernetes编排系统。&lt;/p&gt;

&lt;h1 id=&quot;cgroups-namespaces-and-beyond-what-are-containers-made-from&quot;&gt;Cgroups, namespaces, and beyond: what are containers made from?&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=sK5i-N34im8&amp;amp;t=409s&quot;&gt;https://www.youtube.com/watch?v=sK5i-N34im8&amp;amp;t=409s&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;一个很不错的关于容器基本技术的入门视频。&lt;/p&gt;

&lt;h1 id=&quot;introducing-software-certification-for-kubernetes&quot;&gt;Introducing Software Certification for Kubernetes&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://blog.kubernetes.io/2017/10/software-conformance-certification.html&quot;&gt;http://blog.kubernetes.io/2017/10/software-conformance-certification.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;k8s平台一致性认证计划，通过认证的k8s平台具高度一致的特性，确保不同的应用在不同的平台上都能得到一致的预期。预计年底GA。&lt;/p&gt;

&lt;h1 id=&quot;pluggable-runtimes-containerd-cri-o-and-their-impact-on-kubernetes-users&quot;&gt;Pluggable runtimes: containerd, CRI-O and their impact on Kubernetes users&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://coreos.com/blog/pluggable-oci-runtimes-and-their-impact-on-kubernetes-users&quot;&gt;https://coreos.com/blog/pluggable-oci-runtimes-and-their-impact-on-kubernetes-users&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;K8s虽然开始支持CRI了，但是内部还对Docker有依赖，在生产环境中要支持多种不容的container runtime还需要一段时间，所以目前还是只能使用Docker。&lt;/p&gt;

&lt;h1 id=&quot;feedly推出了team-newsletters&quot;&gt;Feedly推出了Team Newsletters&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.feedly.com/team-newsletters/&quot;&gt;https://blog.feedly.com/team-newsletters/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.feedly.com/newsletter-examples/&quot;&gt;https://blog.feedly.com/newsletter-examples/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;你可以把你在feedly team里面保存的文章通过feedly定期发送给团队，也可以添加非feedly账号的邮箱作为收件人。&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/10/22/write-what-i-have-004.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/10/22/write-what-i-have-004.html</guid>
        
        
      </item>
    
      <item>
        <title>Ubuntu 17.10升级问题</title>
        <description>&lt;p&gt;本周Ubuntu 17.10已经正式发布，我在周末进行了升级，遇到了一些问题。&lt;/p&gt;

&lt;h1 id=&quot;tmux配置有错&quot;&gt;tmux配置有错&lt;/h1&gt;

&lt;p&gt;tmux版本升级到2.5版本，我原来使用的配置如下几行有问题：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy Escape cancel
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;synaptic无法启动&quot;&gt;synaptic无法启动&lt;/h1&gt;

&lt;p&gt;Bug: &lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/synaptic/+bug/1551951&quot;&gt;https://bugs.launchpad.net/ubuntu/+source/synaptic/+bug/1551951&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;virtualbox虚拟机无法启动&quot;&gt;virtualbox虚拟机无法启动&lt;/h1&gt;

&lt;p&gt;升级后有内核兼容性问题，我的解决办法如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;卸载，然后从oracle添加源，安装最新的5.2版本: &lt;a href=&quot;https://www.virtualbox.org/wiki/Linux_Downloads&quot;&gt;https://www.virtualbox.org/wiki/Linux_Downloads&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;然后安装 linux-headers-lowlatency&lt;/li&gt;
  &lt;li&gt;然后执行 /sbin/vboxconfig&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;sougou输入法不能用&quot;&gt;sougou输入法不能用&lt;/h1&gt;

&lt;p&gt;没办法解决，只能等更新了，可以先用ibus。&lt;/p&gt;

&lt;h1 id=&quot;dns解析问题&quot;&gt;dns解析问题&lt;/h1&gt;

&lt;p&gt;Bug: &lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/netcfg/+bug/1712283&quot;&gt;https://bugs.launchpad.net/ubuntu/+source/netcfg/+bug/1712283&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;有个解决办法：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I can confirm that for me removing /etc/resolv.conf and replacing it with a link to stub-resolv.conf using
sudo ln -s /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;网易云音乐无法打开&quot;&gt;网易云音乐无法打开&lt;/h1&gt;

&lt;p&gt;和synaptic无法打开可能是一样的问题。&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/10/22/ubuntu-17.10-upgrade.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/10/22/ubuntu-17.10-upgrade.html</guid>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第3期 - 2017-10-15</title>
        <description>&lt;h1 id=&quot;ubuntu-1710artful-aardvark进入最终冻结状态-将于10月19日发布&quot;&gt;Ubuntu 17.10（Artful Aardvark）进入最终冻结状态 将于10月19日发布&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://www.cnbeta.com/articles/soft/660503.htm&quot;&gt;http://www.cnbeta.com/articles/soft/660503.htm&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;下周就能升级了，yeah！&lt;/p&gt;

&lt;h1 id=&quot;go-192&quot;&gt;Go 1.9.2&lt;/h1&gt;

&lt;p&gt;1.9.1的一个fix出问题了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It appears that the security release Go 1.9.1 may have broken fresh “go get” checkouts of non-Git repositories at least in some cases. So probably we should issue Go 1.9.2 sooner rather than later.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;issue: &lt;a href=&quot;https://github.com/golang/go/issues/22201&quot;&gt;https://github.com/golang/go/issues/22201&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;gopherfest-2017-upspin-rob-pike&quot;&gt;Gopherfest 2017: Upspin (Rob Pike)&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ENLWEfi0Tkg&amp;amp;index=27&amp;amp;list=WL&quot;&gt;https://www.youtube.com/watch?v=ENLWEfi0Tkg&amp;amp;index=27&amp;amp;list=WL&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Rob Pike在今年的Gopherfest上介绍他新参与的项目 &lt;strong&gt;Upspin&lt;/strong&gt;，一种分布式的名字空间系统，用来管理分布在不同位置的数据。这个系统有 &lt;em&gt;key server&lt;/em&gt;, &lt;em&gt;directory server&lt;/em&gt;和 &lt;em&gt;storage server&lt;/em&gt;。 &lt;em&gt;Key server&lt;/em&gt;是集中式的，存储用户数据的地方实现 &lt;em&gt;directory server&lt;/em&gt;和 &lt;em&gt;storage server&lt;/em&gt;，这样用户就能用一种方式访问自己的、位于不同云端的数据。官网 &lt;a href=&quot;https://upspin.io/&quot;&gt;https://upspin.io/&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;go-ten-years-and-climbing&quot;&gt;Go: Ten years and climbing&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://commandcenter.blogspot.com/2017/09/go-ten-years-and-climbing.html&quot;&gt;https://commandcenter.blogspot.com/2017/09/go-ten-years-and-climbing.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Rob Pike回顾Go发展的第一个十年，从2007年9月20日下午的一个讨论开始（Robert Griesemer, Rob Pike, and Ken Thompson ），一直到现在Go在很多领域都得到了广泛的应用。文章中还特别提到了Go在中国非常的流行。&lt;/p&gt;

&lt;h1 id=&quot;microservices-from-design-to-deployment-中文版--微服务从设计到部署&quot;&gt;Microservices from Design to Deployment 中文版 — 《微服务：从设计到部署》&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/oopsguy/microservices-from-design-to-deployment-chinese&quot;&gt;https://github.com/oopsguy/microservices-from-design-to-deployment-chinese&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;introducing-abseil-a-new-common-libraries-project&quot;&gt;Introducing Abseil, a new common libraries project&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://opensource.googleblog.com/2017/09/introducing-abseil-new-common-libraries.html&quot;&gt;https://opensource.googleblog.com/2017/09/introducing-abseil-new-common-libraries.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Google开源的一个C++库。&lt;/p&gt;

&lt;h1 id=&quot;press-release-influxdatas-time-series-platform-now-available-on-ibm-cloud&quot;&gt;Press Release: InfluxData’s Time Series Platform Now Available on IBM Cloud&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.influxdata.com/blog/influxdata-on-ibm-cloud/&quot;&gt;https://www.influxdata.com/blog/influxdata-on-ibm-cloud/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;InfluxData在IBM Cloud上推出InfluxCloud。&lt;/p&gt;

&lt;h1 id=&quot;阿里云溪大会&quot;&gt;阿里云溪大会&lt;/h1&gt;

&lt;p&gt;首日发布的产品: &lt;a href=&quot;https://linux.cn/article-8953-1.html&quot;&gt;https://linux.cn/article-8953-1.html&lt;/a&gt;
发布ElasticSearch云服务: &lt;a href=&quot;https://linux.cn/article-8959-1.html&quot;&gt;https://linux.cn/article-8959-1.html&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;为什么-sql-正在击败-nosql数据的未来是什么&quot;&gt;为什么 SQL 正在击败 NoSQL，数据的未来是什么？&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://linux.cn/article-8949-1.html&quot;&gt;https://linux.cn/article-8949-1.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;TimescaleDB的CEO写的一篇StarWar风格的文章，介绍了SQL和NoSQL交替发展的历史。&lt;/p&gt;

&lt;p&gt;原文地址：&lt;a href=&quot;https://blog.timescale.com/why-sql-beating-nosql-what-this-means-for-future-of-data-time-series-database-348b777b847a&quot;&gt;https://blog.timescale.com/why-sql-beating-nosql-what-this-means-for-future-of-data-time-series-database-348b777b847a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我的理解是，SQL很自然的描述了数据的关系，但是有一段时间SQL的实现不足以支撑数据的增长，所以出现了NoSQL的方式来管理数据，现在SQL的实现又变得更强大了，也能支撑更大的数据量了。其实SQL一直很流行。&lt;/p&gt;

&lt;h1 id=&quot;digital-ocean的对象存储ga了&quot;&gt;Digital Ocean的对象存储GA了&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;DigitalOcean Spaces is Object Storage designed for developers who want a simple way to store and serve a vast amount of data. Almost 90,000 developers signed up to try it out, and now it’s generally available to host your web assets and backups. Try out Spaces with a free 2-month trial.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;pingcap-与腾讯云达成合作htap-数据库-tidb-现开放内测&quot;&gt;PingCAP 与腾讯云达成合作，HTAP 数据库 TiDB 现开放内测&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://cloud.tencent.com/producwidb&quot;&gt;https://cloud.tencent.com/producwidb&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;cockroachdb-11-is-here&quot;&gt;CockroachDB 1.1 is here&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.cockroachlabs.com/blog/cockroachdb-1dot1/&quot;&gt;https://www.cockroachlabs.com/blog/cockroachdb-1dot1/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;包括数据导入的改进、集群任务管理的改进、性能提升。另外，百度也在使用CockroachDB。&lt;/p&gt;

&lt;h1 id=&quot;words-still-matter--mediums-missionfive-years-in&quot;&gt;Words still matter – Medium’s mission — five years in&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://blog.medium.com/words-still-matter-6e9163216052&quot;&gt;https://blog.medium.com/words-still-matter-6e9163216052&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Medium CEO在Medium成立5年的时候撰文，重点是说明Medium为什么要做一个读者订阅服务，而不是采用广告模式。这样可以让Medium直接服务读者和作者，而不是其他的买单人。Medium的收入分配模式是 &lt;strong&gt;Attention = Money&lt;/strong&gt;，所以做了一个鼓掌系统。&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/10/15/write-what-i-have-003.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/10/15/write-what-i-have-003.html</guid>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第2期 - 2017-10-08</title>
        <description>&lt;h1 id=&quot;golang-184-and-191-released&quot;&gt;Golang 1.8.4 and 1.9.1 Released&lt;/h1&gt;

&lt;p&gt;解决了两个安全问题：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第一个是go get的时候拒绝在vcs内部再执行vcs checkout（git submodule除外）&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;By nesting a git checkout inside another version control repository, it was possible for an attacker to trick the “go get” command into executing arbitrary code. The go command now refuses to use version control checkouts found inside other version control systems, with an exception for git submodules (git inside git).
The issue is tracked as https://golang.org/issue/22125 (Go 1.8.4) and https://golang.org/issue/22131 (Go 1.9.1). Fixes are linked from the issues.
Thanks to Simon Rawet for the report.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;第二个是和SMTP通过非TLS通道发送PlainAuth认证信息的问题&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the smtp package, PlainAuth is documented as sending credentials only over authenticated, encrypted TLS connections, but it was changed in Go 1.1 to also send credentials on non-TLS connections when the remote server advertises that PLAIN authentication is supported. The change was meant to allow use of PLAIN authentication on localhost, but it has the effect of allowing a man-in-the-middle attacker to harvest credentials. PlainAuth now requires either TLS or a localhost connection before sending credentials, regardless of what the remote server claims.
This issue is tracked as https://golang.org/issue/22134 (Go 1.8.4) and https://golang.org/issue/22133 (Go 1.9.1). Fixes are linked from the issues.
Thanks to Stevie Johnstone for the report.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;a-decade-of-dynamo-powering-the-next-wave-of-high-performance-internet-scale-applications&quot;&gt;A Decade of Dynamo: Powering the next wave of high-performance, internet-scale applications&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.allthingsdistributed.com/2017/10/a-decade-of-dynamo.html&quot;&gt;http://www.allthingsdistributed.com/2017/10/a-decade-of-dynamo.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wener Vogels写的关于Amazon Dynamo十周年纪念的文章。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;2004年Amazon开始遇到Oracle数据库的瓶颈，深度调查后发现70%的数据组织方式都是key-value式，操作只返回一行；20%的数据操作会返回多行，但是都属于同一张表。&lt;/li&gt;
  &lt;li&gt;然后开始根据自己的需要设计Dynamo的原型：Our goal was to build a database that would have the unbounded scalability, consistent performance and the high availability to support the needs of our rapidly growing business.&lt;/li&gt;
  &lt;li&gt;2007年在SOSP上发表论文。&lt;/li&gt;
  &lt;li&gt;然后决定将其作为云服务推出，推出前在多个方面进行了加强和改进。&lt;/li&gt;
  &lt;li&gt;在2012年1月份，正式在公有云上推出DynamoDB。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;现在有很多大公司在使用DynamoDB来存储关键数据，包括Lyft, Tinder, Comcase, BMW等。&lt;/p&gt;

&lt;h1 id=&quot;amazon-linux-ami-201709发布&quot;&gt;Amazon Linux AMI 2017.09发布&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/aws/now-available-amazon-linux-ami-2017-09/&quot;&gt;https://aws.amazon.com/blogs/aws/now-available-amazon-linux-ami-2017-09/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon更新了Linux AMI版本到2017.09，包含主要特性是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Kernel升级到4.9.51&lt;/li&gt;
  &lt;li&gt;Amazon SSM Agent默认安装&lt;/li&gt;
  &lt;li&gt;Python升级到3.6&lt;/li&gt;
  &lt;li&gt;Ruby升级到2.4&lt;/li&gt;
  &lt;li&gt;OpenSSL升级到1.0.2k&lt;/li&gt;
  &lt;li&gt;HTTP/2支持，内置的软件包httpd24, nginx和curl支持HTTP/2&lt;/li&gt;
  &lt;li&gt;Postgres升级到9.6版本，MySQL升级到5.7版本&lt;/li&gt;
  &lt;li&gt;OpenMPI升级到2.1.1&lt;/li&gt;
  &lt;li&gt;其他软件包升级&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;things-go-better-with-step-functions&quot;&gt;Things Go Better With Step Functions&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/aws/things-go-better-with-step-functions/&quot;&gt;https://aws.amazon.com/blogs/aws/things-go-better-with-step-functions/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;介绍了可口可乐公司通过Step Function来降低一个积分系统费用的案例。可口可乐一开始使用一个中间带有等待90秒的Lambda函数来实现一个移动支付的积分逻辑，这个等待是因为需要调用老旧的后端代码来实现计费核算。Lambda函数是按照运行时长收费的，所以等待的90秒钟都是白花花的银子。后来可口可乐开始使用Step Function，将这个Lambda函数拆分成一个具有三次状态转换的状态机（start -&amp;gt; wait -&amp;gt; points -&amp;gt; end），这样就不用在Lambda函数中进行等待。原先等待90秒的费用变成了状态转换的费用，从而节约了开支。&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/10/08/write-what-i-have-002.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/10/08/write-what-i-have-002.html</guid>
        
        
      </item>
    
      <item>
        <title>想到什么写什么周报 第1期 - 2017-10-01</title>
        <description>&lt;h1 id=&quot;go-185和191快要发布了&quot;&gt;Go 1.8.5和1.9.1快要发布了&lt;/h1&gt;

&lt;p&gt;预计发布时间是北京时间10月5日。&lt;/p&gt;

&lt;h1 id=&quot;rob-pikes-go-proverb&quot;&gt;Rob Pike’s Go Proverb&lt;/h1&gt;

&lt;p&gt;看了个视频，是Rob Pike分享自己关于Go的一些编程格言的，具体见文章：&lt;a href=&quot;http://diabloneo.github.io/2017/09/29/rob-pike-go-proverb.html&quot;&gt;Rob Pike’s Go Proverb&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&quot;uber-jaeger-一个分布式tracing系统&quot;&gt;Uber Jaeger: 一个分布式tracing系统&lt;/h1&gt;

&lt;p&gt;Uber开源的一个分布式tracing系统，具体见文章： &lt;a href=&quot;http://diabloneo.github.io/2017/09/30/uber-jaeger-introduction.html&quot;&gt;Uber Jaeger介绍&lt;/a&gt;。&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Oct 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/10/01/write-what-i-have-001.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/10/01/write-what-i-have-001.html</guid>
        
        
      </item>
    
      <item>
        <title>Uber Jaeger介绍</title>
        <description>&lt;h1 id=&quot;jaeger加入cncf&quot;&gt;Jaeger加入CNCF&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Jaeger&lt;/strong&gt;是 &lt;em&gt;Uber&lt;/em&gt;开源的 &lt;strong&gt;&lt;a href=&quot;http://opentracing.io/&quot;&gt;OpenTracing&lt;/a&gt;&lt;/strong&gt;实现，包括客户端和服务端。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;项目地址: &lt;a href=&quot;https://github.com/jaegertracing/jaeger/&quot;&gt;https://github.com/jaegertracing/jaeger/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;项目文档: &lt;a href=&quot;http://jaeger.readthedocs.io/en/latest/&quot;&gt;http://jaeger.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jaeger项目4月14日开源，9月13日被 &lt;em&gt;CNCF&lt;/em&gt;接受成为第12个托管项目, &lt;a href=&quot;https://www.cncf.io/blog/2017/09/13/cncf-hosts-jaeger/&quot;&gt;CNCF Hosts Jaeger&lt;/a&gt;。CNCF托管的其他11个项目是：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Kubernetes&lt;/li&gt;
  &lt;li&gt;Prometheus&lt;/li&gt;
  &lt;li&gt;OpenTracing&lt;/li&gt;
  &lt;li&gt;Fluentd&lt;/li&gt;
  &lt;li&gt;Linkerd&lt;/li&gt;
  &lt;li&gt;gRPC&lt;/li&gt;
  &lt;li&gt;CoreDNS&lt;/li&gt;
  &lt;li&gt;containerd&lt;/li&gt;
  &lt;li&gt;rkt&lt;/li&gt;
  &lt;li&gt;CNI&lt;/li&gt;
  &lt;li&gt;Envoy&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;jaeger架构&quot;&gt;Jaeger架构&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Jaeger&lt;/em&gt;的架构如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://diabloneo.github.io//assets/imgs/00018_uber_jaeger_architecture.png&quot; alt=&quot;Jaeger Architecture&quot; /&gt;
&lt;em&gt;图片来自http://jaeger.readthedocs.io/en/latest/architecture/&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Jaeger的架构很简洁：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;在每个服务器上运行 &lt;em&gt;jaeger-agent&lt;/em&gt;，用于收集本服务器的信息，然后发送给 &lt;em&gt;jaeger-collector&lt;/em&gt;。&lt;/li&gt;
  &lt;li&gt;每个服务都嵌入 &lt;em&gt;jaeger-client&lt;/em&gt;，这是一个客户端，会把服务的请求处理的tracing信息发送给 &lt;em&gt;jaeger-agent&lt;/em&gt;。&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;jaeger-collector&lt;/em&gt;是一个中心化的服务端，用于收集 &lt;em&gt;jaeger-agent&lt;/em&gt;发送过来的tracing信息进行处理后存储到数据库中（目前只支持Cassandra）。&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;jaeger-query&lt;/em&gt;是一个查询服务，对外保护tracing信息的查询API。&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;jaeger-ui&lt;/em&gt;是一个浏览器客户端。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;jaeger的demo&quot;&gt;Jaeger的demo&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Jaeger&lt;/em&gt;项目的leader写了一篇很好的文章来介绍Jaeger的使用 &lt;a href=&quot;https://medium.com/opentracing/take-opentracing-for-a-hotrod-ride-f6e3141f7941&quot;&gt;Take OpenTracing for a HotROD ride&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;文中演示了查看服务的架构，查看请求的详细构成，定位延迟原因等基本用法。还介绍了span，基于上下文的log，tag，OpenTracing baggage等概念。要了解 &lt;em&gt;Jaeger&lt;/em&gt;能做什么，可以从这篇文章开始。&lt;/p&gt;

&lt;p&gt;这个demo项目是用了 &lt;em&gt;Uber&lt;/em&gt;的 &lt;strong&gt;&lt;a href=&quot;https://github.com/uber/tchannel&quot;&gt;TChannel&lt;/a&gt;&lt;/strong&gt;来实现微服务的RPC，它已经和OpenTracing做了集成，用起来很方便。另外一个流行的rpc框架 &lt;strong&gt;gRPC&lt;/strong&gt;也已经和OpenTracing进行了集成。&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/09/30/uber-jaeger-introduction.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/09/30/uber-jaeger-introduction.html</guid>
        
        
      </item>
    
      <item>
        <title>Rob Pike's Go Proverb</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://diabloneo.github.io//assets/imgs/00017_rob_pike_go_proverb.png&quot; alt=&quot;Rob Pike&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rob Pike在2015年的Gopherfest的演讲，题目是 &lt;em&gt;Go Proverbs&lt;/em&gt;. YouTube地址:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PAAkCSZUG1c&amp;amp;index=27&amp;amp;t=1s&amp;amp;list=WL&quot;&gt;Go Proverbs - Rob Pike - Gopherfest - November 18, 2015&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;他分享了他自己写的几条Go编程的格言，类似 &lt;em&gt;The Zen of Python&lt;/em&gt;，但是没那么正式，格言的列表如下，推荐看视频：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Don’t communicate by sharing memory, share memory by communicating.&lt;/li&gt;
  &lt;li&gt;Concurrency is not parallism.&lt;/li&gt;
  &lt;li&gt;Channels orchestrate; mutexes serialize.&lt;/li&gt;
  &lt;li&gt;The bigger the interface, the weaker the abstraction.&lt;/li&gt;
  &lt;li&gt;Make the zero value useful. (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;bytes.Buffer&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;sync.Mutex&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;interface{}&lt;/code&gt; says nothing.&lt;/li&gt;
  &lt;li&gt;Gofmt’s style is no one’s favorite, yet gofmt is everyone’s favorite.&lt;/li&gt;
  &lt;li&gt;A little copying is better than a little dependency.&lt;/li&gt;
  &lt;li&gt;Syscall must always be guarded with build tags.&lt;/li&gt;
  &lt;li&gt;Cgo must always be guarded with build tags.&lt;/li&gt;
  &lt;li&gt;Cgo is not Go. (他说自己几乎不使用cgo)&lt;/li&gt;
  &lt;li&gt;With the &lt;code class=&quot;highlighter-rouge&quot;&gt;unsafe&lt;/code&gt; package, there are no guarantees.&lt;/li&gt;
  &lt;li&gt;Clear is better than clever.&lt;/li&gt;
  &lt;li&gt;Reflection is never clear.&lt;/li&gt;
  &lt;li&gt;Errors are values.&lt;/li&gt;
  &lt;li&gt;Don’t just check errors, handle them gracefully.&lt;/li&gt;
  &lt;li&gt;Design the architecture, name the components, document the details.&lt;/li&gt;
  &lt;li&gt;Documentation is for users.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 29 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/09/29/rob-pike-go-proverb.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/09/29/rob-pike-go-proverb.html</guid>
        
        
      </item>
    
      <item>
        <title>SDC 2017 Day 3 General Session</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://diabloneo.github.io//assets/imgs/00016_sdc2017_day3.jpg&quot; alt=&quot;Day3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;今天SDC 2017进入第三天，早上还是General Session。&lt;/p&gt;

&lt;h1 id=&quot;impact-of-persistent-memory-on-ssds-and-fabrics&quot;&gt;Impact of Persistent Memory on SSDs and Fabrics&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://sniasdc17.pathable.com/meetings/549928&quot;&gt;https://sniasdc17.pathable.com/meetings/549928&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;是一个联合介绍PM的session，三个公司分别介绍了他们在PM上的产品，具体的可以到他们官网上查看&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.everspin.com/&quot;&gt;https://www.everspin.com/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.newisys.com/&quot;&gt;http://www.newisys.com/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.mobiveil.com/&quot;&gt;http://www.mobiveil.com/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;linux-optimizations-for-low-latency-block-devices&quot;&gt;Linux Optimizations for Low Latency Block Devices&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://sniasdc17.pathable.com/meetings/549964&quot;&gt;https://sniasdc17.pathable.com/meetings/549964&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Througput is easy, latency is hard&lt;/strong&gt;。存储的性能在不断的提升，但是软件层面要提高latency是很困难的。&lt;/p&gt;

&lt;p&gt;SPDK带来的latency降低有限，代价不小，不适用于普通的应用，比较适合专门做硬件的使用。kernel的I/O增加了polling机制，可以有效降低延迟，同时不增加应用的复杂度。一开始做的是不断的polling，会导致CPU 100%，后来增加了hybrid polling机制，cpu降低到58%的同时，I/O延迟和不断的polling是一样的。后续会继续改进，会在需要I/O结果时再做polling，可以进一步降低CPU。&lt;/p&gt;

&lt;h1 id=&quot;data-and-intelligence-in-storage&quot;&gt;Data and Intelligence in Storage&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://sniasdc17.pathable.com/meetings/549932&quot;&gt;https://sniasdc17.pathable.com/meetings/549932&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intel的广告，介绍了Intel Rack Scale Design。&lt;/p&gt;

&lt;h1 id=&quot;persistent-memory-new-tier-or-storage-replacement&quot;&gt;Persistent Memory: New Tier or Storage Replacement?&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://sniasdc17.pathable.com/meetings/549982&quot;&gt;https://sniasdc17.pathable.com/meetings/549982&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这个没听。&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Sep 2017 00:00:00 +0800</pubDate>
        <link>http://diabloneo.github.io//2017/09/14/sdc-2017-3.html</link>
        <guid isPermaLink="true">http://diabloneo.github.io//2017/09/14/sdc-2017-3.html</guid>
        
        
      </item>
    
  </channel>
</rss>
